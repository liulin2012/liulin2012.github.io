<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Lin]]></title>
  <subtitle><![CDATA[More code , Have fun]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-03-29T21:38:23.639Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[lin liu]]></name>
    <email><![CDATA[liulin.jacob@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[利用vim反向破解文件]]></title>
    <link href="http://yoursite.com/2015/03/10/%E5%88%A9%E7%94%A8vim%E5%8F%8D%E5%90%91%E7%A0%B4%E8%A7%A3%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2015/03/10/利用vim反向破解文件/</id>
    <published>2015-03-11T03:00:06.000Z</published>
    <updated>2015-03-12T21:20:18.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>前几天和<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>聊到CS615的最后一次大作业，老师开放漏洞让我们去攻击学校的服务器占领首页，然后各小组之间24小时内互相攻击，于是去年做的时候他去服务器上偷偷事先把别人的ssh私钥下载下来了然后取得了胜利，放了一个超级马里奥的游戏上去。。。。。实在是太贱了。。。。</p>
<p>然后<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>继续吹比说，他的文件目录权限设置的特别好，即使一个group的也几乎啥都看不到，不信让我去看看，然后我就真的去看了看，这是配图。。</p>
<p><img src="http://i.imgur.com/IxFMTUW.png" alt="Imgur"></p>
<p>乍一看，除了几个作业的目录和无关紧要的配置文件，别的权限基本都不可读，全被设置好了，但是这一组文件引起了我的兴趣</p>
<p><img src="http://i.imgur.com/PTpwXsp.png" alt="Imgur"></p>
<a id="more"></a>
<h1 id="VIM">VIM</h1>
<p><code>.bashrc</code>也就是bash的配置文件，而<code>.bashrc.swo</code>是使用<strong>vim</strong>时留下的恢复文件，有时候由于各种原因，比如电脑断电，网络原因导致ssh链接断开等等，在编辑vim的时候异常退出了，vim还是能帮你恢复之前正在编辑但是还没有保存的文档，这种机制就需要vim自带的恢复文件，一般第一个恢复文件是叫<code>.swp</code>，第二个是<code>.swo</code>，当再次打开原来的文件时，就会提示你恢复文件。</p>
<p>而在这个系统中，<code>.bashrc</code>是不可读的，所以我自然不可能从这个文件下手，但是<code>.bashrc.swo</code>是可读的，所以我直接把这个文件拷贝了出来，想试试能不能恢复，我试图直接打开这个文件</p>
<pre><code><span class="keyword">vim</span> .bashrc.swo
</code></pre><p>但是结果都是乱码</p>
<p><img src="http://i.imgur.com/siXmHsLm.png" alt="Imgur"></p>
<p>于是我想试试能不能自己编写一个<code>同名空文件</code>，然后让vim自己的机制来恢复回来呢,于是。。。。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">lliu19<span class="variable">@rainman</span><span class="symbol">:~/tmp</span> <span class="variable">$ </span>touch .bashrc</div><div class="line">lliu19<span class="variable">@rainman</span><span class="symbol">:~/tmp</span> <span class="variable">$ </span>mv .bashrc.swo .bashrc.swp</div><div class="line">lliu19<span class="variable">@rainman</span><span class="symbol">:~/tmp</span> <span class="variable">$ </span>ll</div><div class="line">total <span class="number">25</span></div><div class="line">drwxr-xr-x+  <span class="number">2</span> lliu19 student     <span class="number">4</span> <span class="constant">Mar</span> <span class="number">10</span> <span class="number">23</span><span class="symbol">:</span><span class="number">28</span> .</div><div class="line">drwxr-xr-x+ <span class="number">12</span> lliu19 student    <span class="number">20</span> <span class="constant">Mar</span> <span class="number">10</span> <span class="number">23</span><span class="symbol">:</span><span class="number">28</span> ..</div><div class="line">-rw-r--r--+  <span class="number">1</span> lliu19 student     <span class="number">0</span> <span class="constant">Mar</span> <span class="number">10</span> <span class="number">23</span><span class="symbol">:</span><span class="number">28</span> .bashrc</div><div class="line">-rw-r--r--+  <span class="number">1</span> lliu19 student <span class="number">12288</span> <span class="constant">Mar</span> <span class="number">10</span> <span class="number">23</span><span class="symbol">:</span><span class="number">25</span> .bashrc.swp</div><div class="line">lliu19<span class="variable">@rainman</span><span class="symbol">:~/tmp</span> <span class="variable">$ </span>vim .bashrc</div></pre></td></tr></table></figure>

<p><img src="http://i.imgur.com/208SiKw.png" alt="Imgur"></p>
<p>大功告成！！！</p>
<p>于是我成功反向恢复了他的配置文件，知道了他ec2的私钥文件地址和文件名，虽然光知道地址还是不能知道破解，但是通过vim自带的恢复机制破解了别人的文件，还是很爽的。。。</p>
<p><img src="http://i.imgur.com/8pSpjLR.png?1" alt="Imgur"></p>
<h1 id="WHY">WHY</h1>
<p>为什么这一招能奏效了，这和linux的权限设置有关，linux在默认创建文件时使用<code>umask</code>去配置权限，例如这是学校服务器的默认umask</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lliu19<span class="variable">@rainman</span><span class="symbol">:~/tmp</span> <span class="variable">$ </span>umask</div><div class="line"><span class="number">0022</span></div></pre></td></tr></table></figure>

<p>也就是说创建文件时默认的是去掉了w权限，保留了r+x权限，所以当在服务器上编辑文件时不小心留下了vim的恢复文件<code>.swp</code>时，就会有权限问题。</p>
<p>但是vim毕竟是老牌编辑器不会想不到这个问题，所以vim在生成<code>.swp</code>恢复文件时，和源文件是一样的读写权限，大家可以去试试。因此之所以会在服务器留下这个文件，有各种原因，有可能在设置权限时没想到有这么贱的方法，只修改了原来的权限，漏掉了vim的配置文件。</p>
<p>虽然这次只是破解了一个配置文件，但是vim编辑的文件里经常会有重要的配置，密码，密钥等等，所以还是要小心的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1>
<p>前几天和<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>聊到CS615的最后一次大作业，老师开放漏洞让我们去攻击学校的服务器占领首页，然后各小组之间24小时内互相攻击，于是去年做的时候他去服务器上偷偷事先把别人的ssh私钥下载下来了然后取得了胜利，放了一个超级马里奥的游戏上去。。。。。实在是太贱了。。。。</p>
<p>然后<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>继续吹比说，他的文件目录权限设置的特别好，即使一个group的也几乎啥都看不到，不信让我去看看，然后我就真的去看了看，这是配图。。</p>
<p><img src="http://i.imgur.com/IxFMTUW.png" alt="Imgur"></p>
<p>乍一看，除了几个作业的目录和无关紧要的配置文件，别的权限基本都不可读，全被设置好了，但是这一组文件引起了我的兴趣</p>
<p><img src="http://i.imgur.com/PTpwXsp.png" alt="Imgur"></p>
]]>
    
    </summary>
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员必备的开发工具---MAC]]></title>
    <link href="http://yoursite.com/2015/03/06/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E7%9A%84%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-MAC/"/>
    <id>http://yoursite.com/2015/03/06/程序员必备的开发工具-MAC/</id>
    <published>2015-03-06T06:27:26.000Z</published>
    <updated>2015-03-06T19:24:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>用Mac也1年多了，前半年基本用来打游戏看电影了，由于mac基于unix而来，游戏比较少，好在我只玩dota2，所以对我来说，mac的娱乐性很足。</p>
<p>真正让我感觉离不开Mac的，是我这半年来的学习和开发，在<a href="http://yanguango.com" target="_blank" rel="external">yanguango</a>和<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>的帮助下，对mac可以说有了全新的认识，也对linux编程，shell，vim有了更深入的了解。</p>
<h2 id="为什么选择Mac？">为什么选择Mac？</h2>
<p>对于一个程序猿来说，<strong>效率</strong>永远是第一位的，这不仅体现在学习的效率，还有工作编码的效率。在时间平等的情况下，如果才能有更多的<strong>产出</strong>，这一直是程序员所要思考进步的，如何节省<strong>时间</strong>来换取更高的产出呢?答案是——<a href="http://daily.zhihu.com/story/3387025" target="_blank" rel="external">能花钱的，就不要花时间</a></p>
<p>也许有的人说，Mac太贵，对一个还在上学的学生来说压力太大，确实，2000刀的一台mac对于学生党来说是不小的开支，但是如果你有能力，我<strong>极力</strong>劝你先入手一台mac，为什么呢？——<a href="http://www.cnblogs.com/chijianqiang/p/mmac.html" target="_blank" rel="external">先有 Mac 还是先有银元？</a></p>
<p>那有了Mac如何提高效率了，可以看看这篇文章——<a href="http://mp.weixin.qq.com/s?__biz=MzA3NDM0ODQwMw==&amp;mid=206041450&amp;idx=1&amp;sn=3982c8cc45d7c47f0fbc19fe8371490f&amp;scene=0#rd" target="_blank" rel="external">程序员效率指南</a></p>
<p><strong>工欲善其事，必选利其器</strong></p>
<p>下面是我自己的一些经验分享，也是我最常使用的一些软件。<br><a id="more"></a></p>
<h2 id="应用&amp;效率">应用&amp;效率</h2>
<h3 id="Alfred_2"><a href="http://www.alfredapp.com/" target="_blank" rel="external">Alfred 2</a></h3>
<p><strong>必装</strong>，Mac下的神器之一，可以使用简单的命令完成相当多的事情</p>
<ul>
<li>定位文件</li>
<li>打开软件</li>
<li>计算器</li>
<li>查询api</li>
<li>google搜索</li>
<li>翻译单词</li>
<li>……</li>
</ul>
<p>自从用了它之后再也不用Dock了,打开应用，查东西比以前效率快<strong>几倍</strong>！<br>最关键的时他支持workflow插件，通过各式各样的<a href="http://www.zhihu.com/question/20656680" target="_blank" rel="external">插件</a>可以实现各种功能!</p>
<p><img src="http://i.imgur.com/pnugYMsm.png" alt="Imgur"><br><img src="http://i.imgur.com/C71WDmom.png" alt="Imgur"></p>
<h3 id="Evernote"><a href="https://evernote.com/premium" target="_blank" rel="external">Evernote</a></h3>
<p><strong>必装</strong>，平时找到的技术文章，牛人的随笔都可以记录下来,也可以自己写学习笔记，搜索也十分迅速<br>唯一的不足是有国际版和大陆版两种账号，而且不共享，我就吃了亏，国内的笔记没能同步过来。</p>
<p><img src="http://i.imgur.com/otbPVUim.png" alt="Imgur"></p>
<h3 id="Google_Driver"><a href="https://www.google.com/drive" target="_blank" rel="external">Google Driver</a></h3>
<p><strong>必装</strong>，平时分享文件，上传东西还在用qq群，U盘么？那你就太老土了，在这个资料日益珍贵的年代，我无法想象如果我的所有资料都没了，让我重头起家，那会是多么浩大的一个工程。<br>幸好现在有了许多免费的云存储服务，google driver免费的15G空间足够平时使用了，配合github基本上资料不会丢，最关键的是分享或者共同协作一些文章，会相当方便<br>同类：Dropbox</p>
<h3 id="1Password_5"><a href="https://agilebits.com/onepassword" target="_blank" rel="external">1Password 5</a></h3>
<p><strong>必装</strong>，最方便高效的密码管理器，这年头安全是多么重要，大家可不要像大表姐一样被泄露了艳照，嘿嘿。<br>这个软件有一个主密码，对每个不同的网站生成不同的密码进行管理，而且会自动填写页面的密码可以通过icloud或者Dropbox同步</p>
<p><img src="http://i.imgur.com/ncFptrU.png" alt="Imgur"></p>
<h3 id="Moom"><a href="http://manytricks.com/moom/" target="_blank" rel="external">Moom</a></h3>
<p><strong>推荐</strong>，窗口移动工具，对于程序来说，同时开几个窗口那是家常便饭，一个一个移动真是太麻烦了，好在这个软件完美的帮我们解决了问题</p>
<h3 id="Mou/MacDown"><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a>/<a href="http://macdown.uranusjr.com/" target="_blank" rel="external">MacDown</a></h3>
<p><strong>推荐</strong>，可视化的md编辑器，其实用哪个都行，但是md没有统一的标准，所以不同编辑器的效果有可能不一样。</p>
<p><img src="http://i.imgur.com/FejLedt.png" alt="Imgur"></p>
<h3 id="Pocket"><a href="https://getpocket.com/" target="_blank" rel="external">Pocket</a></h3>
<p><strong>推荐</strong>，readerlater工具，保存网站文章或者微博文章，等有时间了就阅读一下，而且这个软件对移动端的支持非常好</p>
<h3 id="AppCleaner"><a href="http://www.freemacsoft.net/appcleaner/" target="_blank" rel="external">AppCleaner</a></h3>
<p><strong>推荐</strong>，清理软件的程序</p>
<h3 id="iStat_Menus"><a href="http://bjango.com/mac/istatmenus/" target="_blank" rel="external">iStat Menus</a></h3>
<p><strong>推荐</strong>，检测自己的电脑的各个参数，对于打游戏的同学，可以手动调风扇转速很方便</p>
<h2 id="开发">开发</h2>
<h3 id="Dash"><a href="http://kapeli.com/dash" target="_blank" rel="external">Dash</a></h3>
<p><strong>必装</strong>，查文档的工具，非常好用节省时间，配合alfred能快速查找api</p>
<p><img src="http://i.imgur.com/NHFJF6m.png" alt="Imgur"></p>
<h3 id="Homebrew"><a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a></h3>
<p><strong>必装</strong>，Mac下的包管理器，装东西卸载东西都很方便，一个命令 brew install就完事了，要卸载就brew uninstall</p>
<h3 id="zsh">zsh</h3>
<p><strong>必装</strong>，虽然Mac原装的bash已经很好用了，但是zsh的功能更加丰富，而且全面兼容bash，利用<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">oh-my-zsh</a>一键安装很方便，而且提供上百种插件，例如自带的git能alias相当多的git命令，还有神器z或者autojump，能记住cd进入过的目录，下一次进入的时候，只要z然后输出目录关键字就能到大，再也不用输出一串超级长的cd命令了。</p>
<h3 id="TotalTerminal"><a href="http://totalterminal.binaryage.com/" target="_blank" rel="external">TotalTerminal</a></h3>
<p><strong>推荐</strong>，一款不错的终端，可以通过快捷键下拉，我的时command+command，还提供标签和查询功能，比原生的terminal强大不少。</p>
<h3 id="CodeRunner"><a href="https://coderunnerapp.com/" target="_blank" rel="external">CodeRunner</a></h3>
<p><strong>推荐</strong>，测试一些小代码专用，比如想试试这个函数对不对啊，这个类怎么用啊都可以放进这个软件里跑，各种语言基本都支持。</p>
<p><img src="http://i.imgur.com/PgT7U7um.png" alt="Imgur"></p>
<h3 id="Hexo"><a href="http://hexo.io/" target="_blank" rel="external">Hexo</a></h3>
<p><strong>推荐</strong>，博客利器，关键我比较喜欢用md写东西，所以非常方便，原本用wordpress，但是感觉太繁重了，hexo比较轻量级，配置也方便。</p>
<h2 id="Editor—-VIM">Editor—-VIM</h2>
<p>我个人只用vim，所以就说一些插件的经验，emacs党可以跳过</p>
<h3 id="pathogen"><a href="https://github.com/tpope/vim-pathogen" target="_blank" rel="external">pathogen</a></h3>
<p>插件管理器，很方便的管理自己的插件<br>同类：vundle</p>
<h3 id="nerdtree"><a href="https://github.com/scrooloose/nerdtree" target="_blank" rel="external">nerdtree</a></h3>
<p>编辑vim时可以树形查看自己的目录结构，分屏操作</p>
<h3 id="YouCompleteMe"><a href="https://github.com/Valloric/YouCompleteMe" target="_blank" rel="external">YouCompleteMe</a></h3>
<p>神级代码补全软件，google员工的作品，配置有点麻烦，但是相当好用</p>
<h3 id="ultisnips&amp;&amp;vim-snippets"><a href="https://github.com/SirVer/ultisnips" target="_blank" rel="external">ultisnips</a>&amp;&amp;vim-snippets</h3>
<p>定义了一些代码块，避免了很多重复劳动</p>
<p><img src="http://i.imgur.com/hqlcWNs.png" alt="Imgur"></p>
<h2 id="其他">其他</h2>
<h3 id="Popcorn-Time"><a href="https://popcorntime.io/" target="_blank" rel="external">Popcorn-Time</a></h3>
<p>老美也用的在线P2P高清1080P的电影的电视剧</p>
<h3 id="uTorrent"><a href="http://www.utorrent.com/" target="_blank" rel="external">uTorrent</a></h3>
<p>迅雷在美国封杀了，所以用这个，在海盗湾下载东西十分快，尤其是那些<strong>你懂得</strong>种子。</p>
<h3 id="Steam"><a href="http://store.steampowered.com/" target="_blank" rel="external">Steam</a></h3>
<p>已经有很多游戏支持Mac平台了，平时在上面玩dota2和csgo。</p>
<h2 id="后记">后记</h2>
<p>这几天联合<a href="http://yanguango.com" target="_blank" rel="external">yanguango</a>和<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>对一个windows用户进行了深刻的宣传，像苍蝇一样盯着他说Mac有多好，多牛逼。。。。。最后这个同志在我们不厌其烦的劝导下，上纽约中央车站拿下了一台mac，哈哈哈哈哈哈。。。。</p>
<p><img src="http://i.imgur.com/nxFvrCa.png" alt="Imgur"></p>
<p>以上所有的软件均为正版，也请大家尊重程序员的劳动，支持正版！</p>
<p>今天正好下雪停课，本着共享开源的精神，写下了这些东西分享给大家，希望有帮助，如果还有哪些Mac下的神器我没发现，也请大家通过屏幕下方的联系方式告诉我，我也会不断更新，谢谢！</p>
<p>作者:lin<br>邮箱:liulin.jacob@gmail.com<br><a href="http://weibo.com/1939168341" target="_blank" rel="external">新浪微博</a><br><a href="https://github.com/liulin2012" target="_blank" rel="external">github</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2>
<p>用Mac也1年多了，前半年基本用来打游戏看电影了，由于mac基于unix而来，游戏比较少，好在我只玩dota2，所以对我来说，mac的娱乐性很足。</p>
<p>真正让我感觉离不开Mac的，是我这半年来的学习和开发，在<a href="http://yanguango.com" target="_blank" rel="external">yanguango</a>和<a href="http://wilbeibi.com" target="_blank" rel="external">wilbeibi</a>的帮助下，对mac可以说有了全新的认识，也对linux编程，shell，vim有了更深入的了解。</p>
<h2 id="为什么选择Mac？">为什么选择Mac？</h2>
<p>对于一个程序猿来说，<strong>效率</strong>永远是第一位的，这不仅体现在学习的效率，还有工作编码的效率。在时间平等的情况下，如果才能有更多的<strong>产出</strong>，这一直是程序员所要思考进步的，如何节省<strong>时间</strong>来换取更高的产出呢?答案是——<a href="http://daily.zhihu.com/story/3387025" target="_blank" rel="external">能花钱的，就不要花时间</a></p>
<p>也许有的人说，Mac太贵，对一个还在上学的学生来说压力太大，确实，2000刀的一台mac对于学生党来说是不小的开支，但是如果你有能力，我<strong>极力</strong>劝你先入手一台mac，为什么呢？——<a href="http://www.cnblogs.com/chijianqiang/p/mmac.html" target="_blank" rel="external">先有 Mac 还是先有银元？</a></p>
<p>那有了Mac如何提高效率了，可以看看这篇文章——<a href="http://mp.weixin.qq.com/s?__biz=MzA3NDM0ODQwMw==&amp;mid=206041450&amp;idx=1&amp;sn=3982c8cc45d7c47f0fbc19fe8371490f&amp;scene=0#rd" target="_blank" rel="external">程序员效率指南</a></p>
<p><strong>工欲善其事，必选利其器</strong></p>
<p>下面是我自己的一些经验分享，也是我最常使用的一些软件。<br>]]>
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="Mac" scheme="http://yoursite.com/categories/Mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The prime contest]]></title>
    <link href="http://yoursite.com/2015/02/17/The-prime-contest/"/>
    <id>http://yoursite.com/2015/02/17/The-prime-contest/</id>
    <published>2015-02-17T06:37:34.000Z</published>
    <updated>2015-03-29T21:37:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Overview">Overview</h2>
<p>sum the primes from a to b, inclusive, a &lt; b &lt;= $10^{14}$.<br>Measure how long it takes your algorithm to sum the primes from 1 to $10^9$.<br>Determine the complexity of your algorithm and calculate how long it would take to sum for a=1, b = $10^{12}$.</p>
<h2 id="Algorithm">Algorithm</h2>
<p>I have used the <a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" target="_blank" rel="external">Sieve_of_Eratosthenes </a>algorithm to delete the primes from the vector.<br><a id="more"></a></p>
<h2 id="Multi-thread">Multi-thread</h2>
<p>I have used the multithread technology to speed up the program.I have test some data.You can change the thread number to check the answer and find the best thread number in this experiment.</p>
<table>
<thead>
<tr>
<th style="text-align:center">Data</th>
<th style="text-align:center">Thread number</th>
<th style="text-align:center">Execution time</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1~$10^9$</td>
<td style="text-align:center">1000</td>
<td style="text-align:center">0.6 Sec</td>
</tr>
<tr>
<td style="text-align:center">1~$10^{10}$</td>
<td style="text-align:center">5000</td>
<td style="text-align:center">6.8 Sec</td>
</tr>
<tr>
<td style="text-align:center">1~$10^{11}$</td>
<td style="text-align:center">10000</td>
<td style="text-align:center">90 Sec</td>
</tr>
</tbody>
</table>
<p><img src="http://i.imgur.com/f8dSURel.png" alt=""></p>
<p><img src="http://i.imgur.com/0NN7rXal.png" alt=""></p>
<p><img src="http://i.imgur.com/oNFQTwTl.png" alt=""></p>
<h2 id="Compiler_optimize">Compiler optimize</h2>
<pre><code><span class="comment">clang</span><span class="literal">+</span><span class="literal">+</span> <span class="literal">-</span><span class="comment">std=c</span><span class="literal">+</span><span class="literal">+</span><span class="comment">11</span>  <span class="literal">-</span><span class="comment">O2</span> <span class="comment">main</span><span class="string">.</span><span class="comment">cpp</span>
</code></pre><p>I have use the <code>-O2</code> to optimize the compiler and then</p>
<pre><code>./a.<span class="keyword">out</span>
</code></pre><p>This trick can <a href="https://msdn.microsoft.com/en-us/library/8f8h5cxt.aspx" target="_blank" rel="external">Maximize Speed</a> when compile the C++ code.</p>
<h2 id="Analyze">Analyze</h2>
<p>I have research on on the internet</p>
<blockquote>
<p>The bit complexity of the algorithm is O(n (log n) (log log n)) bit operations with a memory requirement of O(n).</p>
</blockquote>
<p>My result show above when I test the data $10^{9}$,$10^{10}$,$10^{11}$.Due to the algorithm complexity,I calculate the $10^{12}$ need to use 17 minute.</p>
<h2 id="Final">Final</h2>
<p>If you have any question,be free to contact me.Thank you!</p>
<ul>
<li>Author:lin</li>
<li>Email:liulin.jacob@gmail.com</li>
<li>Code Address:<a href="https://github.com/liulin2012/CPE593/blob/master/HW1b/main.cpp" target="_blank" rel="external">The prime contest</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Overview">Overview</h2>
<p>sum the primes from a to b, inclusive, a &lt; b &lt;= $10^{14}$.<br>Measure how long it takes your algorithm to sum the primes from 1 to $10^9$.<br>Determine the complexity of your algorithm and calculate how long it would take to sum for a=1, b = $10^{12}$.</p>
<h2 id="Algorithm">Algorithm</h2>
<p>I have used the <a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes" target="_blank" rel="external">Sieve_of_Eratosthenes </a>algorithm to delete the primes from the vector.<br>]]>
    
    </summary>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="multithread" scheme="http://yoursite.com/tags/multithread/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Realize DHT Network through RESTful]]></title>
    <link href="http://yoursite.com/2014/11/07/realize-dht-network-through-restful/"/>
    <id>http://yoursite.com/2014/11/07/realize-dht-network-through-restful/</id>
    <published>2014-11-08T04:53:34.000Z</published>
    <updated>2015-03-06T19:27:29.000Z</updated>
    <content type="html"><![CDATA[<h1 id="1-DHT_Network">1.DHT Network</h1>
<blockquote>
<p>DHT(<a href="http://en.wikipedia.org/wiki/Distributed_hash_table" title="DHT" target="_blank" rel="external">Distributed Hash Tables</a>)is a class of a decentralized <a href="http://en.wikipedia.org/wiki/Distributed_computing" title="Distributed computing" target="_blank" rel="external">distributed system</a> that provides a lookup service similar to a <a href="http://en.wikipedia.org/wiki/Hash_table" title="Hash table" target="_blank" rel="external">hash table</a>; (<em>key</em>, <em>value</em>) pairs are stored in a DHT, and any participating <a href="http://en.wikipedia.org/wiki/Node_(networking" target="_blank" rel="external">node</a> “Node (networking)”) can efficiently retrieve the value associated with a given key. Responsibility for maintaining the mapping from keys to values is distributed among the nodes, in such a way that a change in the set of participants causes a minimal amount of disruption. This allows a DHT to scale to extremely large numbers of nodes and to handle continual node arrivals, departures, and failures.</p>
</blockquote>
<p>The key idea for the DHT network is utilize the pair(key,value) to  store and retrieve the data in distributed system.<br><a id="more"></a></p>
<p>1:Every resource has a unique<strong> pair(key,value)</strong> to distinguish.</p>
<p>2:System will use hash function to process every key,and use the result to determine where this resource should be stored in the DHT network.</p>
<p>3:When a user want to get the resource,use the same algorithm to hash the key and get the destination of the resource.</p>
<p>Maybe you didn’t know what I am saying now,but I will use the real model to realize this algorithm and then you will know the key idea about the DHT.After used this algorithm,the DHT network has a new key feature different from other distributed system like the GFS(<a href="http://blog-linliu.rhcloud.com/wp-content/uploads/2014/10/The-Google-File-System.pdf" target="_blank" rel="external">The Google File System</a>).Every node(a computer in the DHT network) is both client and server,to responsible for a small route and storage in its area.So DHT don’t need a “super computer” to know everything in the system.This is why DHT is called <strong>decentralized distributed system.</strong></p>
<blockquote>
<p>Tips:In the GFS,system need to use a <strong>master</strong> to “control” everything.It needs to know all the information in the distributed system.Obviously,The <strong>master </strong>is the bottleneck in this system,but google has done a lot of optimize in the system,so it is very useful,more information about GFS,you can see the paper in the reference below.<br>&nbsp;</p>
</blockquote>
<p>In that case,DHT can be very scalability because it isn’t limited from the central control like the master in the GFS.So it is beneficial to store the huge amount of data in a distributed network.The famous application is the <a href="http://en.wikipedia.org/wiki/NoSQL" target="_blank" rel="external">NoSQL</a> database such as <strong><a href="http://en.wikipedia.org/wiki/Apache_Cassandra" target="_blank" rel="external">Cassandra</a> </strong>by facebook and <a href="http://en.wikipedia.org/wiki/Dynamo_(storage_system" target="_blank" rel="external">Dynamo</a>) by Amazon.</p>
<p>There are a lot of different way to realize the DHT algorithm like Ring, Tree, Hypercube, Skip List, BuVerfly Network, …I have used the <a href="http://en.wikipedia.org/wiki/Chord_(peer-to-peer" target="_blank" rel="external">chord</a>) to do that because it is easy to explain and use.</p>
<p><img src="/images/c875063ffe4b73b15aa8d6d3e19c213c9b56437e.png" alt="45b48d324a1089fc21efa&amp;690"></p>
<p><strong>figure 1</strong></p>
<p>Step to realize the algorithm:</p>
<p>1:Every computer in the DHT network is a <strong>node</strong> which means it is responsible for store the data and route.In the figure1,each computer is represented as N1,N8,N14,N21……</p>
<p>2:Every resource is a <strong>pair(key,value).</strong>The resource can be everything such as the movie,music or the data in the application.The resource name will be hashed into a key and stored in a node.The resource is represented as K10,K24,K30…..The number is the key number of the resource.</p>
<p>3:The <strong>rule</strong> to store the resource in the computer(node) is that the resource is stored in the node which node number is <strong>bigger</strong> than resource key and the <strong>closest</strong> to that resource.For instance,the K10 need to store in N14 because N14 is bigger than 10 and N14 is the closest node to the K10.So K30 and K24 is stored in N32.In that case,once a new resource want to be stored in the DHT network,the resource name will be hashed into a key value and then use this value to determine where the resource should be stored.(This point is very <strong>important</strong> to understand the DHT network,if you can’t even understand what I am saying now,back to the step1 again.)</p>
<p><a href="http://blog-linliu.rhcloud.com/wp-content/uploads/2014/11/45b48d324a1089fd1ebbdamp690.png" target="_blank" rel="external"><img src="/images/42aba3ce704bd922cb35b2ffa6cdf00647d7fdbe.png" alt="45b48d324a1089fd1ebbd&amp;690"></a></p>
<p>&nbsp;</p>
<p><strong>figure 2</strong></p>
<p>Now,you should know how to store a resource in a node.But how to realize it?</p>
<p><strong>rule</strong>:every node has its own finger table to route.FINGERN(i) = min {IDN2 | IDn2 ≥ IDn + 2^i (mod M)}</p>
<p>In the figure 2:</p>
<p>N8+1=N9,N9 belong to N14</p>
<p>N8+2=N10,N10 belong to N14</p>
<p>N8+8=N16,N16 belong to N21</p>
<p>For example,if one resource enter in the system and the key value is 22,so it is called K22.Once K22 enter in the system from the N8 and then retrieve the finger table,N8+8 is 16,N8+16 is 24.The K22 is between 16 and 24.So the K22 go to the 16 which is N21.And then use the N21 finger table to retrieve.</p>
<p>&nbsp;</p>
<p><a href="http://blog-linliu.rhcloud.com/wp-content/uploads/2014/11/45b48d324a1089fffe1beamp690.png" target="_blank" rel="external"><img src="/images/59ebda1755c8399caa8871fe3b0f31c04fc245a8.png" alt="45b48d324a1089fffe1be&amp;690"></a></p>
<p>&nbsp;</p>
<p><strong>figure 3 </strong></p>
<p>If the key value is bigger than any number of the finger table,use the biggest one.Figure 3 show this condition.<a href="http://blog-linliu.rhcloud.com/wp-content/uploads/2014/11/Screen-Shot-2014-11-08-at-01.52.25.png" target="_blank" rel="external"><img src="/images/3bef9e86b26304a922e1223c6d98e17b7b8ece1d.png" alt="Screen Shot 2014-11-08 at 01.52.25"></a></p>
<p><strong>figure 4</strong></p>
<p>Figure 4 show the detail about the route process.</p>
<blockquote>
<p>So,what is the <strong>algorithm complexity</strong>?It is same to the finger table size!With high probability, Chord contacts O(log N) nodes to find a successor in an N-node network.</p>
</blockquote>
<h1 id="2-RESTful">2.RESTful</h1>
<p>The RESTful(<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="external"><strong>Representational state transfer</strong></a>) is used to connect each node.It is easy to use because it only use the <strong>HTTP command</strong> which is familiar to us.Every node has RESTful client and server,so they can send the request to another and get the response.</p>
<p>In the client side,the client send the <strong>http request</strong> to the server side and get a Response from the server.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Response <span class="title">getRequest</span>(URI uri) {</div><div class="line">		<span class="keyword">try</span> {</div><div class="line">			Response cr = client.target(uri)</div><div class="line">					.request(MediaType.APPLICATION_XML_TYPE)</div><div class="line">					.header(Time.TIME_STAMP, Time.advanceTime())</div><div class="line">					.get();</div><div class="line">			processResponseTimestamp(cr);</div><div class="line">			<span class="keyword">return</span> cr;</div><div class="line">		} <span class="keyword">catch</span> (Exception e) {</div><div class="line">			error(&quot;Exception during GET request: &quot; + e);</div><div class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">		}</div><div class="line">	}</div><div class="line"></div><div class="line"><span class="keyword">public</span> String[] <span class="title">get</span>(NodeInfo n, String k) <span class="keyword">throws</span> Failed{</div><div class="line">		UriBuilder ub = UriBuilder.fromUri(n.addr);</div><div class="line">		URI getPath = ub.queryParam(&quot;key&quot;, k).build();</div><div class="line">		info(&quot;client get(&quot;+getPath+&quot;)&quot;);</div><div class="line">		Response response=getRequest(getPath);</div><div class="line">		<span class="keyword">if</span> (response == <span class="keyword">null</span> || response.getStatus() &gt;= <span class="number">300</span>) {</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> DHTBase.Failed(&quot;GET ?key=&quot;+k+&quot;addr=&quot;+n.addr);</div><div class="line">		} <span class="keyword">else</span> {</div><div class="line">			<span class="keyword">return</span> response.readEntity(tableRowType).getValue().vals;</div><div class="line">		}</div><div class="line">	}</div></pre></td></tr></table></figure>

<p>In the server side,you can use the annotation to identify the path and response the request.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="annotation">@GET</span></div><div class="line"><span class="annotation">@Path</span>(&amp;quot;info&amp;quot;)</div><div class="line"><span class="annotation">@Produces</span>(&amp;quot;application/xml&amp;quot;)</div><div class="line"><span class="keyword">public</span> Response <span class="title">getNodeInfoXML</span>() {</div><div class="line">	<span class="keyword">return</span> <span class="keyword">new</span> NodeService(headers, uriInfo).getNodeInfo();</div><div class="line">}</div></pre></td></tr></table></figure>

<p>The more detail about the RESTful you can see the wiki and the paper in the UCI.</p>
<h1 id="3-Final">3.Final</h1>
<p>This is my first time to write a English technology passage,so if you have found there are some errors or someplace you didn’t understand yet,please do not hesitate to contact me through the email <strong>liulin.jacob@gmail.com </strong>or leave a message below the passage.I am glad to receive your email.If you have some comment about my blog,I am appreciated to learn from you.</p>
<p>Thank you,have fun</p>
<p>lin</p>
<p>liulin.jacob@gmail.com</p>
<p>&nbsp;</p>
<p><strong>References:</strong></p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Distributed_hash_table" title="DHT" target="_blank" rel="external">Distributed Hash Tables</a></li>
<li><a href="http://en.wikipedia.org/wiki/Chord_(peer-to-peer" target="_blank" rel="external">chord</a>)</li>
<li><a href="http://en.wikipedia.org/wiki/NoSQL" target="_blank" rel="external">NoSQL</a></li>
<li><a href="http://en.wikipedia.org/wiki/Apache_Cassandra" target="_blank" rel="external">Cassandra</a></li>
<li><a href="http://en.wikipedia.org/wiki/Dynamo_(storage_system" target="_blank" rel="external">Dynamo</a>)</li>
<li><a href="http://blog-linliu.rhcloud.com/wp-content/uploads/2014/10/The-Google-File-System.pdf" target="_blank" rel="external">The Google File System</a></li>
<li><a href="http://blog.csdn.net/opennaive/article/details/7483523" target="_blank" rel="external">谷歌技术”三宝”之谷歌文件系统</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_45b48d320100q6u7.html" target="_blank" rel="external">结构化P2P网络——DHT网络原理</a></li>
<li><a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="external">Representational state transfer</a></li>
<li><a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm" target="_blank" rel="external">Representational State Transfer (REST)</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="external">RESTful API 设计指南</a></li>
</ul>
<h3 id="Related_articles_across_the_web">Related articles across the web</h3>
<ul>
<li><a href="http://blog.libtorrent.org/2014/11/dht-routing-table-maintenance/" target="_blank" rel="external"><img src="/images/c6b6bb93117a03074522e3292ed420c48fa495b8.jpg" alt=""></a><a href="http://blog.libtorrent.org/2014/11/dht-routing-table-maintenance/" target="_blank" rel="external">DHT routing table maintenance</a></li>
<li><a href="http://themindstorms.blogspot.com/2014/11/nosql-nosql-databases-hadoop-big-data.html" target="_blank" rel="external"><img src="/images/ac855e72b11d34da1bb518f43d6e000380c53f47.jpg" alt=""></a><a href="http://themindstorms.blogspot.com/2014/11/nosql-nosql-databases-hadoop-big-data.html" target="_blank" rel="external">NoSQL: NoSQL databases, Hadoop, Big Data: Pinned tabs Nov.3rd</a></li>
<li><a href="http://www.databasetube.com/nosql/dynamic-dynamos-comparing-riak-and-cassandra/" target="_blank" rel="external"><img src="/images/5a14a111c81e9492df286ed237beb7c84978d2ef.jpg" alt=""></a><a href="http://www.databasetube.com/nosql/dynamic-dynamos-comparing-riak-and-cassandra/" target="_blank" rel="external">Dynamic Dynamos: Comparing Riak and Cassandra</a></li>
<li><a href="http://www.hakkalabs.co/articles/eventbrite-recommendation-engine-apache-cassandra-2/" target="_blank" rel="external"><img src="/images/1772745eefe96420fd3a003d9d75fd46980dbba9.jpg" alt=""></a><a href="http://www.hakkalabs.co/articles/eventbrite-recommendation-engine-apache-cassandra-2/" target="_blank" rel="external">Eventbrite Recommendation Engine on Apache Cassandra</a></li>
<li><a href="http://cloudcelebrity.wordpress.com/2014/10/20/the-present-and-future-of-hadoop-from-its-creator-doug-cutting/" target="_blank" rel="external"><img src="/images/082126dfc9c351850e17320faab33fc5b1bd1cfb.jpg" alt=""></a><a href="http://cloudcelebrity.wordpress.com/2014/10/20/the-present-and-future-of-hadoop-from-its-creator-doug-cutting/" target="_blank" rel="external">The present and future of Hadoop from its creator Doug Cutting</a></li>
<li><a href="http://www.programmableweb.com/news/opendirect-api-standardizes-digital-ad-trading/elsewhere-web/2014/11/06" target="_blank" rel="external"><img src="/images/be783f37a738995347c6672aa3ee7cf3558d1834.jpg" alt=""></a><a href="http://www.programmableweb.com/news/opendirect-api-standardizes-digital-ad-trading/elsewhere-web/2014/11/06" target="_blank" rel="external">OpenDirect API Standardizes Digital Ad Trading</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1-DHT_Network">1.DHT Network</h1>
<blockquote>
<p>DHT(<a href="http://en.wikipedia.org/wiki/Distributed_hash_table" title="DHT" target="_blank" rel="external">Distributed Hash Tables</a>)is a class of a decentralized <a href="http://en.wikipedia.org/wiki/Distributed_computing" title="Distributed computing" target="_blank" rel="external">distributed system</a> that provides a lookup service similar to a <a href="http://en.wikipedia.org/wiki/Hash_table" title="Hash table" target="_blank" rel="external">hash table</a>; (<em>key</em>, <em>value</em>) pairs are stored in a DHT, and any participating <a href="http://en.wikipedia.org/wiki/Node_(networking" target="_blank" rel="external">node</a> “Node (networking)”) can efficiently retrieve the value associated with a given key. Responsibility for maintaining the mapping from keys to values is distributed among the nodes, in such a way that a change in the set of participants causes a minimal amount of disruption. This allows a DHT to scale to extremely large numbers of nodes and to handle continual node arrivals, departures, and failures.</p>
</blockquote>
<p>The key idea for the DHT network is utilize the pair(key,value) to  store and retrieve the data in distributed system.<br>]]>
    
    </summary>
    
      <category term="DHT" scheme="http://yoursite.com/tags/DHT/"/>
    
      <category term="RESTful" scheme="http://yoursite.com/tags/RESTful/"/>
    
      <category term="Cloud Computing" scheme="http://yoursite.com/categories/Cloud-Computing/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello,Everyone]]></title>
    <link href="http://yoursite.com/2014/10/09/helloeveryone/"/>
    <id>http://yoursite.com/2014/10/09/helloeveryone/</id>
    <published>2014-10-10T00:30:40.000Z</published>
    <updated>2015-02-17T04:46:43.000Z</updated>
    <content type="html"><![CDATA[<p>Hello,everyone,I am lin liu,come from China My major is computer science and I am studying in America now.</p>
<p>Soccer and Dota2 are my favorite sports.Besides that,I am also fond of studying the computer science technology ,especially the cloud computing and algorithm.</p>
<p>This blog will be updated in an indefinite schedule,including the technology passage,studying experience,life record and so on.The passage will be written in English,sometimes both in English and Chinese.Due to my poor English,maybe I will write some sentences you can’t understand.Please calm down,do not fuck me.I am learning. lol</p>
<p>Finally,thank you for your coming.Good luck,have fun~~</p>
<p>&nbsp;</p>
<p>大家好，我是刘霖，来自中国，CS专业苦逼码农一枚，现在在大美帝专心读书。</p>
<p>平时酷爱踢足球打Dota2，没事钻研一下技术，现在主要学习云计算以及算法方面的知识,</p>
<p>本博客不定时更新文章，包括技术文章，学习心得，生活记录等等，经常拖稿和跳票，一般写英文的，有时候也会中英文双语，看心情。。。嘿嘿。。。由于英语水平不过关，经常会出现chiglish的情况，大家不要喷我，我也在慢慢学习之中。</p>
<p>最后谢谢大家来到我的博客，Have fun~~</p>
<p>&nbsp;</p>
<p>Lin</p>
<p>liulin.jacob@gmail.com</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hello,everyone,I am lin liu,come from China My major is computer science and I am studying in America now.</p>
<p>Soccer and Dota2 are my]]>
    </summary>
    
      <category term="Daily life" scheme="http://yoursite.com/categories/Daily-life/"/>
    
  </entry>
  
</feed>
